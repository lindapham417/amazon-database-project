-- Nguyen Linh Dan Pham (Linda)
-- Professor Peter Wyner
-- MSIT3860-01-Fall 2022
-- 18 December 2022

-- create table seller

create table seller(seller_id decimal(12) not null, seller_name varchar(64) not null, seller_email varchar(64), primary key(seller_id));-- create table category
create table category(category_id decimal(12) not null, category_name varchar(64) not null, primary key (category_id));

-- create table product
create table product(product_id decimal(12) not null,category_id decimal(12) not null, product_name varchar(256) not null, product_description varchar(256) not null,product_price decimal(12,2) not null, primary key(product_id),foreign key(category_id) references category);-- create table inventory
create table inventory(inventory_id decimal(12) not null, seller_id decimal(12) not null,product_id decimal(12) not null,inventory decimal(12) not null,condition varchar(64),primary key(inventory_id),foreign key(seller_id) references seller,foreign key(product_id) references product);-- create table customer
create table customer(customer_id decimal(12) not null, customer_username varchar(64) not null,customer_firstname varchar(64) not null, customer_lastname varchar(64) not null,customer_email varchar(64) not null,customer_phone decimal(12) not null,customer_address varchar(256) not null,primary key(customer_id));-- create table purchase
create table purchase(order_id decimal(12) not null,customer_id decimal(12) not null, seller_id decimal(12) not null,product_id decimal(12) not null, units_purchased decimal(12) not null,primary key(order_id),foreign key(customer_id) references customer,foreign key(seller_id) references seller,foreign key(product_id) references product);-- create table shipmentcreate table shipment(tracking_id decimal(12) not null, order_id decimal(12) not null,shipping_fee decimal(12,2) not null,primary key(tracking_id),foreign key(order_id) references purchase);

-- create procedure add_productcreate or replace procedure add_product( product_id_arg in decimal, category_id_arg in decimal, product_name_arg in varchar, product_desc_arg in varchar, product_price_arg in decimal)isbegininsert into product(product_id, category_id, product_name, product_description, product_price)values(product_id_arg, category_id_arg, product_name_arg, product_desc_arg, product_price_arg);end;/

-- create procedure update_inventorycreate or replace procedure update_inventory(inventory_id_arg in decimal, seller_id_arg in decimal, product_id_arg in decimal, inventory_arg in varchar, condition_arg in varchar)asbegin    update inventory    set inventory.inventory = inventory.inventory + inventory_arg    where inventory.seller_id=seller_id_arg and inventory.product_id=product_id_arg;      if (sql%rowcount = 0) then         insert into inventory(        inventory_id, seller_id, product_id, inventory, condition)        values(inventory_id_arg, seller_id_arg, product_id_arg, inventory_arg, condition_arg);    end if;end;/-- create procedure add_customercreate or replace procedure add_customer( customer_id_arg in decimal, customer_username_arg in varchar,customer_fname_arg in varchar, customer_lname_arg in varchar, customer_email_arg in varchar, customer_phone_arg in decimal,customer_address_arg in varchar) isbegininsert into customer(customer_id, customer_username, customer_firstname, customer_lastname, customer_email, customer_phone, customer_address)values(customer_id_arg, customer_username_arg, customer_fname_arg, customer_lname_arg, customer_email_arg, customer_phone_arg, customer_address_arg);end;/-- create procedure add_ordercreate or replace procedure add_order(order_id_arg in decimal, customer_id_arg in decimal, seller_id_arg in decimal, product_id_arg in decimal, units_purchased_arg in decimal)asbegin    update inventory    set inventory.inventory = inventory.inventory - units_purchased_arg    where inventory.seller_id=seller_id_arg and inventory.product_id=product_id_arg;      insert into purchase(        order_id, customer_id, seller_id, product_id, units_purchased)        values(order_id_arg, customer_id_arg, seller_id_arg, product_id_arg, units_purchased_arg);end;/-- create procedure add_shipmentcreate or replace procedure add_shipment( tracking_id_arg in decimal, order_id_arg in decimal, shipping_fee_arg in decimal)isbegininsert into shipment(tracking_id, order_id, shipping_fee)values(tracking_id_arg, order_id_arg, shipping_fee_arg);end;/